You are a helpful and knowledgeable Library Assistant. Your responsibilities include:
- Answer questions about books, authors, and library resources.
- 执行用户直接给出的SQL查询，并解释SQL的含义。
- Support users in searching and locating information efficiently.

You have the following capabilities:
- Querying a local database (structured information with tables and fields).
- Using large language model reasoning and knowledge to supplement and expand information.

### Your Current Tasks:

1. **Query Analysis**  
   - First, check whether the user’s request is relevant to your responsibilities.  
   - If irrelevant, politely explain that you are not responsible for this type of task. Set `"relevance": "no"`.   
   - If the user’s intent is unclear, ask clarifying questions. Set `"relevance": "unclear"`. 

2. **Relevance Determination**  
   - If the request is relevant but does **not** require the local database, answer directly using LLM reasoning in **Chinese**.  
     Set `"relevance": "Yes and LLM only"`.  
   - If the request is relevant and **does** require the local database, provide:  
     - `new_question`: a natural language query (not SQL) in Chinese, describing precisely what information should be retrieved from the database.  
     - `explain_purpose`: a short explanation in Chinese, describing how the results of `new_question` will help answer the user’s original question.  
     Set `"relevance": "Yes and DB query"`. In this case, leave `"reply"` empty.
  - if the user directly provides an SQL query, 判断查询的tables和字段是否在schema中，若不在则relevance设为no，若在则设为Yes and DB query

### Input:
- Database description:  
  ebook
这个数据库主要存储电子书的信息，包括书籍的ISBN号、出版日期、作者、出版社等。它的主要功能是为电子商务平台提供书籍信息管理，支持用户搜索、查看和购买电子书。此外，数据库还能帮助出版社和作者管理和分析书籍的销售情况。
Tables:
[books1,books2]

- Tables and fields descriptions:  
  Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |



- User’s natural language query:  
  查询books1和books2两个表中，作者名字含有“但丁”的所有书籍，并找出这些书籍的最早出版日期

### Output (JSON):
```json
{
  "relevance": "no / unclear / Yes and LLM only / Yes and DB query",
  "reply": "If 'Yes and LLM only', provide the LLM-generated answer in Chinese. If 'No' or 'Unclear', reply in Chinese as instructed.",
  "new_question": "If 'Yes and DB query', provide the natural language query in Chinese.",
  "explain_purpose": "If 'Yes and DB query', explain in Chinese how the database results help answer the original question."
}

```

```json
{
  "relevance": "Yes and DB query",
  "new_question": "查询books1和books2两个表中，作者名字包含'但丁'的所有书籍，并找出这些书籍的最早出版日期。",
  "explain_purpose": "用户想要找到作者名字中包含'但丁'的所有书籍，并且想知道这些书籍中最早的出版日期。通过查询数据库，我们可以找到符合条件的书籍信息，从而回答用户的问题。"
}
```
------------
You are an intelligent SQL query assistant.  
Your job is to convert a user’s natural language question into an executable SQL query, using the given database schema.  

### Instructions:

1. **Understand the query**  
   - Identify intent and map it to the correct tables/fields.  
   - If the query contains vague terms (e.g., “recent”, “reasonable price”, “big clients”) or domain-specific language that cannot be directly mapped, ask the user for clarification in Chinese before generating SQL.  

2. **Write SQL**  
   - Once clarified, generate a valid SQL query strictly based on the schema.  
   - Ensure correct syntax and accurate filtering logic.  
   - Briefly explain in Chinese which tables are used and what the conditions mean.

### Notes:
- Do not show reasoning steps.  
- Output only the JSON in the specified format.  

### Input:
- **User Query:** 
查询books1和books2两个表中，作者名字包含'但丁'的所有书籍，并找出这些书籍的最早出版日期。  

- **Database schema** (tables and fields): 

Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |

  


### Output (JSON):
```json
{
  "type": "sql | unclear", // indicates whether the output is a SQL query or a clarification request
  "reply": "Generated SQL query, or a clarification request in Chinese",
  "tables": ["table1", "table2", "..."]   // array of table names, empty if not applicable
  "explanation": "Explanation in Chinese" // tables are used and what the conditions mean
}
```
```json
{
  "type": "sql",
  "reply": "SELECT MIN(publishdate) AS earliest_publish_date FROM (SELECT publishdate FROM books1 WHERE author LIKE '%但丁%' UNION ALL SELECT publishdate FROM books2 WHERE author LIKE '%但丁%') AS combined_books",
  "tables": ["books1", "books2"],
  "explanation": "这个查询首先在books1和books2两个表中查找作者名字包含'但丁'的所有书籍的出版日期，然后使用UNION ALL合并这两个查询的结果。最后，从合并后的结果中找出最早的出版日期。"
}
```
------------

You are a **Library Assistant**.  
The user has asked a question related to the local database. You have already executed an SQL query and obtained results. Now, you must use both the SQL results and your own knowledge to answer the user’s question.

### Instructions
1. Use the SQL results as supporting evidence.  
2. Combine them with your knowledge when answering.  
   - If the answer relies on SQL results, explain the meaning of the SQL output, including which tables are used and what the query conditions represent.  
   - If the SQL results and your knowledge together are insufficient, clearly tell the user that you cannot answer.  
3. Suggest follow-up questions if appropriate.  
4. When referencing SQL results, never output raw data. Always use **temp_table5** as a placeholder.  

### Input
- User question: 查询books1和books2两个表中，作者名字含有“但丁”的所有书籍，并找出这些书籍的最早出版日期  
- Database schema: ebook
这个数据库主要存储电子书的信息，包括书籍的ISBN号、出版日期、作者、出版社等。它的主要功能是为电子商务平台提供书籍信息管理，支持用户搜索、查看和购买电子书。此外，数据库还能帮助出版社和作者管理和分析书籍的销售情况。
Tables:
[books1,books2]  
- SQL executed: SELECT name, MIN(publishdate) AS earliest_publish_date FROM books1 WHERE author LIKE '%但丁%' GROUP BY name UNION SELECT name, MIN(publishdate) AS earliest_publish_date FROM books2 WHERE author LIKE '%但丁%' GROUP BY name  
- SQL result (first N rows if too many): total rows count: 26
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| name                                                                                                                                            | earliest_publish_date   |
+=================================================================================================================================================+=========================+
| 神曲的故事                                                                                                                                      | 2004-01-31 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲 故事插图本                                                                                                                                 | 1998-09-30 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲                                                                                                                                            |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲·炼狱篇                                                                                                                                     |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲·天堂篇                                                                                                                                     |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲·地狱篇                                                                                                                                     |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲的故事（插图珍藏本）                                                                                                                        |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 艺术大师讲述世界名著的故事:神曲                                                                                                                 |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 生命之殿                                                                                                                                        |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 君主国                                                                                                                                          | 2003-08-13 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 多雷插图本神曲  地狱篇  炼狱篇  天堂篇                                                                                                          | 2007-08-13 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 《神曲》图集                                                                                                                                    |                         |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲：地狱篇、炼狱篇、天国篇                                                                                                                    | 2013-08-13 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 作家榜经典：神曲(地狱、净界、天堂共3册，一字未删！世界文学史里程碑杰作！1500条详细注释，15000字深度导读，带您读懂《神曲》精髓！) (大星文化出品) | 2020-02-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 田德望译文集(套装共6册)                                                                                                                         | 2015-01-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲3 天堂篇                                                                                                                                    | 2021-09-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲2 炼狱篇                                                                                                                                    | 2021-09-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲1 地狱篇                                                                                                                                    | 2021-09-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲·天国篇                                                                                                                                     | 2010-04-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+
| 神曲·地狱篇(青少年成长丛书)                                                                                                                     | 2015-01-01 00:00:00     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------+  

### Output (JSON):
```json
{
  "reply": "Answer and explanation if any, in Chinese",
  "followups": ["Follow-up 1", "Follow-up 2"] // optional, can be empty
}
```

```json
{
  "reply": "在books1和books2两个表中，我们找到了多本作者名字含有“但丁”的书籍。这些书籍中最早的出版日期是1998年9月30日，书名为《神曲 故事插图本》。这个查询结果是通过在两个表中搜索作者名包含'但丁'的书籍，并对每本书的出版日期进行分组后取最早的日期得到的。你可以进一步查询这些书籍的详细信息，或者了解其他作者的书籍出版情况。",
  "followups": ["查询更多关于但丁的书籍的详细信息", "了解其他作者的书籍出版情况"]
}
```
------------
You are a helpful and knowledgeable Library Assistant. Your responsibilities include:
- Answer questions about books, authors, and library resources.
- 执行用户直接给出的SQL查询，并解释SQL的含义。
- Support users in searching and locating information efficiently.

You have the following capabilities:
- Querying a local database (structured information with tables and fields).
- Using large language model reasoning and knowledge to supplement and expand information.

### Your Current Tasks:

1. **Query Analysis**  
   - First, check whether the user’s request is relevant to your responsibilities.  
   - If irrelevant, politely explain that you are not responsible for this type of task. Set `"relevance": "no"`.   
   - If the user’s intent is unclear, ask clarifying questions. Set `"relevance": "unclear"`. 

2. **Relevance Determination**  
   - If the request is relevant but does **not** require the local database, answer directly using LLM reasoning in **Chinese**.  
     Set `"relevance": "Yes and LLM only"`.  
   - If the request is relevant and **does** require the local database, provide:  
     - `new_question`: a natural language query (not SQL) in Chinese, describing precisely what information should be retrieved from the database.  
     - `explain_purpose`: a short explanation in Chinese, describing how the results of `new_question` will help answer the user’s original question.  
     Set `"relevance": "Yes and DB query"`. In this case, leave `"reply"` empty.
  - if the user directly provides an SQL query, 判断查询的tables和字段是否在schema中，若不在则relevance设为no，若在则设为Yes and DB query

### Input:
- Database description:  
  ebook
这个数据库主要存储电子书的信息，包括书籍的ISBN号、出版日期、作者、出版社等。它的主要功能是为电子商务平台提供书籍信息管理，支持用户搜索、查看和购买电子书。此外，数据库还能帮助出版社和作者管理和分析书籍的销售情况。
Tables:
[books1,books2]

- Tables and fields descriptions:  
  Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |



- User’s natural language query:  
  查询books1和books2两个表中，作者名字含有“但丁”的所有书籍，并找出这些书籍的最早出版日期

### Output (JSON):
```json
{
  "relevance": "no / unclear / Yes and LLM only / Yes and DB query",
  "reply": "If 'Yes and LLM only', provide the LLM-generated answer in Chinese. If 'No' or 'Unclear', reply in Chinese as instructed.",
  "new_question": "If 'Yes and DB query', provide the natural language query in Chinese.",
  "explain_purpose": "If 'Yes and DB query', explain in Chinese how the database results help answer the original question."
}

```

```json
{
  "relevance": "Yes and DB query",
  "new_question": "查询books1和books2两个表中，作者名字包含'但丁'的所有书籍，并找出这些书籍的最早出版日期。",
  "explain_purpose": "用户想要找出所有作者名字中包含'但丁'的书籍，并且想知道这些书籍中最早的出版日期。通过查询数据库，我们可以精确地找出符合条件的书籍及其出版日期，从而满足用户的需求。"
}
```
------------
You are a helpful and knowledgeable Library Assistant. Your responsibilities include:
- Answer questions about books, authors, and library resources.
- 执行用户直接给出的SQL查询，并解释SQL的含义。
- Support users in searching and locating information efficiently.

You have the following capabilities:
- Querying a local database (structured information with tables and fields).
- Using large language model reasoning and knowledge to supplement and expand information.

### Your Current Tasks:

1. **Query Analysis**  
   - First, check whether the user’s request is relevant to your responsibilities.  
   - If irrelevant, politely explain that you are not responsible for this type of task. Set `"relevance": "no"`.   
   - If the user’s intent is unclear, ask clarifying questions. Set `"relevance": "unclear"`. 

2. **Relevance Determination**  
   - If the request is relevant but does **not** require the local database, answer directly using LLM reasoning in **Chinese**.  
     Set `"relevance": "Yes and LLM only"`.  
   - If the request is relevant and **does** require the local database, provide:  
     - `new_question`: a natural language query (not SQL) in Chinese, describing precisely what information should be retrieved from the database.  
     - `explain_purpose`: a short explanation in Chinese, describing how the results of `new_question` will help answer the user’s original question.  
     Set `"relevance": "Yes and DB query"`. In this case, leave `"reply"` empty.
  - if the user directly provides an SQL query, 判断查询的tables和字段是否在schema中，若不在则relevance设为no，若在则设为Yes and DB query

### Input:
- Database description:  
  ebook
这个数据库主要存储电子书的信息，包括书籍的ISBN号、出版日期、作者、出版社等。它的主要功能是为电子商务平台提供书籍信息管理，支持用户搜索、查看和购买电子书。此外，数据库还能帮助出版社和作者管理和分析书籍的销售情况。
Tables:
[books1,books2]

- Tables and fields descriptions:  
  Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |



- User’s natural language query:  
  查询books1和books2两个表中，作者名字含有“但丁”的所有书籍，并找出这些书籍的最早出版日期

### Output (JSON):
```json
{
  "relevance": "no / unclear / Yes and LLM only / Yes and DB query",
  "reply": "If 'Yes and LLM only', provide the LLM-generated answer in Chinese. If 'No' or 'Unclear', reply in Chinese as instructed.",
  "new_question": "If 'Yes and DB query', provide the natural language query in Chinese.",
  "explain_purpose": "If 'Yes and DB query', explain in Chinese how the database results help answer the original question."
}

```

```json
{
  "relevance": "Yes and DB query",
  "new_question": "查询books1和books2两个表中，作者名字包含'但丁'的所有书籍的名称、作者和出版日期",
  "explain_purpose": "通过查询包含'但丁'的作者名的书籍，我们可以找到这些书籍的详细信息，并比较出版日期以找出最早的一个。"
}
```
------------
You are an intelligent SQL query assistant.  
Your job is to convert a user’s natural language question into an executable SQL query, using the given database schema.  

### Instructions:

1. **Understand the query**  
   - Identify intent and map it to the correct tables/fields.  
   - If the query contains vague terms (e.g., “recent”, “reasonable price”, “big clients”) or domain-specific language that cannot be directly mapped, ask the user for clarification in Chinese before generating SQL.  

2. **Write SQL**  
   - Once clarified, generate a valid SQL query strictly based on the schema.  
   - Ensure correct syntax and accurate filtering logic.  
   - Briefly explain in Chinese which tables are used and what the conditions mean.

### Notes:
- Do not show reasoning steps.  
- Output only the JSON in the specified format.  

### Input:
- **User Query:** 
查询books1和books2两个表中，作者名字包含'但丁'的所有书籍的名称、作者和出版日期  

- **Database schema** (tables and fields): 

Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |

  


### Output (JSON):
```json
{
  "type": "sql | unclear", // indicates whether the output is a SQL query or a clarification request
  "reply": "Generated SQL query, or a clarification request in Chinese",
  "tables": ["table1", "table2", "..."]   // array of table names, empty if not applicable
  "explanation": "Explanation in Chinese" // tables are used and what the conditions mean
}
```
```json
{
  "type": "sql",
  "reply": "SELECT name, author, publishdate FROM books1 WHERE author LIKE '%但丁%' UNION SELECT name, author, publishdate FROM books2 WHERE author LIKE '%但丁%'",
  "tables": ["books1", "books2"],
  "explanation": "查询books1和books2两个表中，作者名字包含'但丁'的所有书籍的名称、作者和出版日期。使用UNION来合并两个表中的查询结果，确保结果中不包含重复项。"
}
```
------------
You are an intelligent SQL query assistant.  
Your job is to convert a user’s natural language question into an executable SQL query, using the given database schema.  

### Instructions:

1. **Understand the query**  
   - Identify intent and map it to the correct tables/fields.  
   - If the query contains vague terms (e.g., “recent”, “reasonable price”, “big clients”) or domain-specific language that cannot be directly mapped, ask the user for clarification in Chinese before generating SQL.  

2. **Write SQL**  
   - Once clarified, generate a valid SQL query strictly based on the schema.  
   - Ensure correct syntax and accurate filtering logic.  
   - Briefly explain in Chinese which tables are used and what the conditions mean.

### Notes:
- Do not show reasoning steps.  
- Output only the JSON in the specified format.  

### Input:
- **User Query:** 
查询books1和books2两个表中，作者名字包含'但丁'的所有书籍，并找出这些书籍的最早出版日期。  

- **Database schema** (tables and fields): 

Table:books1
Description: 这是一个包含书籍信息的数据表，涵盖书籍的基本属性和相关元数据。
| column_name   | column_type   | val_lang   | examples                                              |
|:--------------|:--------------|:-----------|:------------------------------------------------------|
| id            | bigint        |            | [656, 166211, 666629]                                 |
| damsid        | text          |            | ['43995', '60522481', 'sdsdeb00020266']               |
| damscode      | varchar(255)  | Danish     | ['HACA10-43995', 'QDYMS22000-60522481', 'sdsdeb-sd... |
| name          | varchar(255)  | Chinese    | ['花房', '可怕的广东人', '毛泽东的老师们']            |
| author        | varchar(255)  | ko         | ['韩放', '伍豪主编', '尹高朝;']                       |
| publisher     | varchar(255)  |            | ['<NA>', '中国长安出版社', '<NA>']                    |
| publishdate   | text          |            | ['', '', '']                                          |
| isbn          | varchar(255)  | hu         | ['<NA>', '978-7-5107-0330-0', '978-114-04147-0']      |
| 中图法分类    | varchar(255)  | Welsh      | ['<NA>', 'C955.2', 'G4']                              |
| entitytypes   | varchar(255)  | vi         | ['PDF,TXT', ',TXT', 'PDF']                            |
| bookcover     | bigint        |            | [0, 0, 0]                                             |
| keywords      | varchar(255)  | ko         | ['花房；韩放', '民族性', '<NA>']                      |


Table:books2
Description: 这是一个关于书籍的数据库表，包含了书籍的基本信息和分类。
| column_name   | column_type   | val_lang   | examples                                                  |
|:--------------|:--------------|:-----------|:----------------------------------------------------------|
| id            | bigint        |            | [1251183, 1368212, 1265228]                               |
| damsid        | varchar(255)  |            | ['SH00192394', '80064023', 'SH00143394']                  |
| damscode      | varchar(255)  |            | ['SHSHSH-SH00192394', 'HXGYC22000-80064023', 'SHSH...     |
| name          | varchar(255)  |            | ['大故宫3', '废催化剂污染管理与资源化', '被风吹落的夏天'] |
| author        | varchar(255)  | Chinese    | ['阎崇年', '杨骥，邱兆富，张巍，曹礼梅编著', 'Q点调皮']   |
| publisher     | varchar(255)  | ko         | ['长江文艺出版社', '化学工业出版社', '<NA>']              |
| publishdate   | text          |            | ['2013-01-01 00:00:00', '', '2014-02-08 00:00:00']        |
| isbn          | varchar(255)  | hu         | ['9787535462367', '978-7-122-41230-0', '<NA>']            |
| 中图法分类    | varchar(255)  |            | ['K203;K928.74', 'X78', '<NA>']                           |
| entitytypes   | varchar(255)  | German     | ['EPUB', 'PDF', 'EPUB']                                   |
| bookcover     | bigint        |            | [0, 0, 0]                                                 |
| keywords      | varchar(255)  | Chinese    | ['文化遗产-介绍-中国;-故宫-介绍', '<NA>', '<NA>']         |

  


### Output (JSON):
```json
{
  "type": "sql | unclear", // indicates whether the output is a SQL query or a clarification request
  "reply": "Generated SQL query, or a clarification request in Chinese",
  "tables": ["table1", "table2", "..."]   // array of table names, empty if not applicable
  "explanation": "Explanation in Chinese" // tables are used and what the conditions mean
}
```
```json
{
  "type": "sql",
  "reply": "SELECT MIN(publishdate) AS earliest_publish_date FROM (SELECT publishdate FROM books1 WHERE author LIKE '%但丁%' UNION ALL SELECT publishdate FROM books2 WHERE author LIKE '%但丁%') AS combined_books",
  "tables": ["books1", "books2"],
  "explanation": "该查询首先从books1和books2两个表中筛选出作者名字包含'但丁'的书籍，然后将这些书籍的出版日期合并，并找出最早的出版日期。"
}
```
------------
